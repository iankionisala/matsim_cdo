DELIMITER $$
DROP PROCEDURE IF EXISTS `sp_retrieve_route` $$
CREATE PROCEDURE `sp_retrieve_route`()
BEGIN
  DECLARE agent_record_not_found INT DEFAULT 0;
  DECLARE l_time DECIMAL(8,1);
  DECLARE l_link VARCHAR(255);
  DECLARE l_person INT(11);
  DECLARE l_acttype VARCHAR(255);
  DECLARE m_Pair INT DEFAULT 0; /* flag for paired semi-routes */
  DECLARE m_Qry MEDIUMTEXT DEFAULT NULL;
  DECLARE m_AgentPointer INT(11) DEFAULT 0;
  #DECLARE m_timefrom DECIMAL(8,1);
  #DECLARE m_timeto DECIMAL(8,1);
  DECLARE curAgent CURSOR FOR SELECT `time`, link, person, acttype FROM eventlog WHERE (person BETWEEN 0 AND 45) AND acttype IN ('origin', 'destination') ORDER BY person, `time` ASC;
  DECLARE CONTINUE HANDLER FOR NOT FOUND SET agent_record_not_found = 1;

  # opens cursor for AGENT
  OPEN curAgent;

  main_loop:LOOP
    /* fetches each row */
    FETCH curAgent INTO l_time, l_link, l_person, l_acttype;

    /* EOF */
    IF agent_record_not_found = 1 THEN
      LEAVE main_loop;
    END IF;


    IF m_Pair = 0 THEN
       SET @m_timefrom = l_time;
       SET @m_directOne = l_acttype;
      /* increments flag counter */
      SET m_Pair = m_Pair + 1;

    ELSE
      SET @m_person = l_person;
      SET @m_timeto = l_time;
      SET @m_directTwo = l_acttype;
      SET @m_directTwo = CONCAT(@m_directOne, ' to ', @m_directTwo);
      SET @m_elapsedtime = @m_timeto - @m_timefrom;
      PREPARE agentRoute FROM 'INSERT INTO route SET agent=?, timefrom=?, timeto=?, direction=?, timeelapsed=?';
      EXECUTE agentRoute USING @m_person, @m_timefrom, @m_timeto, @m_directTwo, @m_elapsedtime;

      /* resets */
      SET m_Pair = 0;
      SET @m_timefrom = 0.0;
      SET @m_timeto = 0.0;
      SET @m_elapsedtime = 0.0;
      #SET @m_person = -1;

    END IF;

  END LOOP main_loop;

END $$
DELIMITER;